---
# tasks file for ansible-wifi_ap

# Network
- name: "[main] /etc/network/interfaces: Find and comment all lines containing {{ wifi_ap_WLAN }}"
  replace:
    path: /etc/network/interfaces
    regexp: '(^[^#\n].*{{ wifi_ap_WLAN }}.*$)'
    replace: '#\1'
    before: '# Access Point interface settings:'
  become: yes
  notify: '[wifi_ap] Systemd daemon-reload'
  tags:
    - wifi_ap

- name: "[main] /etc/network/interfaces: Find and comment all {{ wifi_ap_WLAN }}-related settings"
  replace:
    path: /etc/network/interfaces
    regexp: '(^[#].*{{ wifi_ap_WLAN }}.*$)\n(\s.*$)'
    replace: '\1\n#\2'
    before: '# Access Point interface settings:'
  become: yes
  notify: '[wifi_ap] Systemd daemon-reload'
  tags:
    - wifi_ap

- name: "[main] Configure {{ wifi_ap_WLAN }} (ip: {{ wifi_ap_WLAN_ip }}; netmask: {{ wifi_ap_WLAN_netmask }}) in /etc/network/interfaces"
  blockinfile:
    marker: '#{mark} Added by drew-kun.wifi_ap asnible role'
    path: /etc/network/interfaces
    block: |
      # Access Point interface settings:
      auto {{ wifi_ap_WLAN }}
      #allow-hotplug {{ wifi_ap_WLAN }}
      iface {{ wifi_ap_WLAN }} inet static
        address {{ wifi_ap_WLAN_ip }}
        netmask {{ wifi_ap_WLAN_netmask }}
  become: yes
  notify: '[wifi_ap] Systemd daemon-reload'
  tags:
    - wifi_ap

#- name: "[main] Turn on ip forwarding on in /proc and in the sysctl file and reload if necessary"
#  sysctl:
#    name: net.ipv4.ip_forward
#    value: 1
#    sysctl_set: yes
#    state: present
#    reload: yes
#  become: yes
#  tags:
#    - wifi_ap
#
## Dependencies (tasks/dependencies.yml)
## Contain Reboot instructions for iptables kernel modules reload
#- name: "[main] Include dependencies installation tasks"
#  include_tasks: dependencies.yml
#  tags:
#    - wifi_ap
#
## DHCP
#- name: "[main] Generate /etc/dhcp/dhcpd.conf"
#  template:
#    src: dhcpd.conf.j2
#    dest: /etc/dhcp/dhcpd.conf
#    owner: root
#    group: root
#    mode: 0644
#    backup: yes
#  become: yes
#  notify: '[wifi_ap] Restart dhcp daemon'
#  tags:
#    - wifi_ap
#
#- name: "[main] Specify 'INTERFACES={{ wifi_ap_WLAN }}' in /etc/default/isc-dhcp-server"
#  lineinfile:
#    path: /etc/default/isc-dhcp-server
#    regexp: 'INTERFACES=".*"'
#    line: 'INTERFACES="{{ wifi_ap_WLAN }}"'
#    state: present
#  become: yes
#  notify: '[wifi_ap] Restart dhcp daemon'
#  tags:
#    - wifi_ap
#
## HostAPd
#- name: "[main] Generate /etc/hostapd/hostapd.conf"
#  template:
#    src: hostapd.conf.j2
#    dest: /etc/hostapd/hostapd.conf
#    owner: root
#    group: root
#    mode: 0644
#  become: yes
#  notify: '[wifi_ap] Restart hostapd daemon'
#  tags:
#    - wifi_ap
#
#- name: "[main] Add 'DAEMON_CONF=/etc/hostapd/hostapd.conf' to /etc/default/hostapd"
#  lineinfile:
#    path: /etc/default/hostapd
#    regexp: 'DAEMON_CONF=\".*"'
#    line: 'DAEMON_CONF="/etc/hostapd/hostapd.conf"'
#    state: present
#  become: yes
#  notify: '[wifi_ap] Restart hostapd daemon'
#  tags:
#    - wifi_ap
#
## IPTables (tasks/iptables.yml)
#- name: "[main] Include tasks from iptables.yml"
#  include_tasks: iptables.yml
#  tags:
#    - wifi_ap
#
#- name: "[main] Flush all handlers before reboot"
#  meta: flush_handlers
#  tags:
#    - wifi_ap
#
#- name: "[main] Access Point ESSID"
#  debug:
#    msg:
#      - "Configuration is done"
#      - "the Access Point name: {{ wifi_ap_essid }}"
#  tags:
#    - wifi_ap
...
